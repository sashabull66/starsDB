{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Git repos/sashabull66/sashabull66/sashabull66/starsDB/src/components/RandomPlanet/RandomPlanet.js\";\nimport React, { Component } from 'react';\nimport './RandomPlanet.css';\nimport { swapi } from \"../../services/swapi/SwapiService\";\nimport Spinner from \"../Spinner\";\nimport ErrorComponent from \"../ErrorComponent\";\nimport PlanetView from \"./PlanetView\";\nimport ErrorBoundry from \"../ErrorBoundry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RandomPlanet extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      planet: {},\n      isLoading: true\n    };\n\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet,\n        isLoading: false\n      });\n    };\n\n    this.updatePlanet = () => {\n      const id = Math.floor(Math.random() * 25 + 2);\n      swapi.getPlanet(id).then(planet => {\n        this.onPlanetLoaded(planet);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 5000);\n  }\n\n  componentWillUnmount() {\n    // чищу таймер\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      isLoading,\n      planet\n    } = this.state;\n\n    const preloader = isLoading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 41\n    }, this);\n\n    const content = !isLoading && /*#__PURE__*/_jsxDEV(PlanetView, { ...planet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 39\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"random-planet jumbotron rounded\",\n        children: [preloader, content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RandomPlanet;","map":{"version":3,"sources":["/home/user/Рабочий стол/Git repos/sashabull66/sashabull66/sashabull66/starsDB/src/components/RandomPlanet/RandomPlanet.js"],"names":["React","Component","swapi","Spinner","ErrorComponent","PlanetView","ErrorBoundry","RandomPlanet","state","planet","isLoading","onPlanetLoaded","setState","updatePlanet","id","Math","floor","random","getPlanet","then","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","preloader","content"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,oBAAP;AACA,SAAQC,KAAR,QAAoB,mCAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCO,KAFiC,GAEzB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,SAAS,EAAE;AAFP,KAFyB;;AAAA,SAgBjCC,cAhBiC,GAgBfF,MAAD,IAAY;AACzB,WAAKG,QAAL,CAAc;AAACH,QAAAA,MAAD;AAASC,QAAAA,SAAS,EAAE;AAApB,OAAd;AACH,KAlBgC;;AAAA,SAoBjCG,YApBiC,GAoBlB,MAAM;AACjB,YAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAAhB,GAAqB,CAAhC,CAAX;AACAf,MAAAA,KAAK,CAACgB,SAAN,CAAgBJ,EAAhB,EACKK,IADL,CACWV,MAAD,IAAY;AACd,aAAKE,cAAL,CAAoBF,MAApB;AACH,OAHL;AAIH,KA1BgC;AAAA;;AAOjCW,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,YAAL;AACA,SAAKQ,QAAL,GAAgBC,WAAW,CAAC,KAAKT,YAAN,EAAoB,IAApB,CAA3B;AACH;;AAEDU,EAAAA,oBAAoB,GAAG;AAAE;AACrBC,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACH;;AAcDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACf,MAAAA,SAAD;AAAYD,MAAAA;AAAZ,QAAsB,KAAKD,KAAjC;;AACA,UAAMkB,SAAS,GAAGhB,SAAS,iBAAK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAhC;;AACA,UAAMiB,OAAO,GAAG,CAACjB,SAAD,iBAAc,QAAC,UAAD,OAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA,YAA9B;;AACA,wBACI,QAAC,YAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,mBACKiB,SADL,EAEKC,OAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAxCgC;;AA2CrC,eAAepB,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport './RandomPlanet.css'\nimport {swapi} from \"../../services/swapi/SwapiService\";\nimport Spinner from \"../Spinner\";\nimport ErrorComponent from \"../ErrorComponent\";\nimport PlanetView from \"./PlanetView\";\nimport ErrorBoundry from \"../ErrorBoundry\";\n\nclass RandomPlanet extends Component {\n\n    state = {\n        planet: {},\n        isLoading: true,\n    }\n\n    componentDidMount() {\n        this.updatePlanet()\n        this.interval = setInterval(this.updatePlanet, 5000)\n    }\n\n    componentWillUnmount() { // чищу таймер\n        clearInterval(this.interval)\n    }\n\n    onPlanetLoaded = (planet) => {\n        this.setState({planet, isLoading: false})\n    }\n\n    updatePlanet = () => {\n        const id = Math.floor(Math.random() * 25 + 2)\n        swapi.getPlanet(id)\n            .then((planet) => {\n                this.onPlanetLoaded(planet)\n            })\n    }\n\n    render() {\n        const {isLoading, planet} = this.state\n        const preloader = isLoading  && <Spinner/>\n        const content = !isLoading && <PlanetView {...planet}/>\n        return (\n            <ErrorBoundry>\n                <div className='random-planet jumbotron rounded'>\n                    {preloader}\n                    {content}\n                </div>\n            </ErrorBoundry>\n        )\n    }\n}\n\nexport default RandomPlanet;\n\n"]},"metadata":{},"sourceType":"module"}