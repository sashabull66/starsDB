{"ast":null,"code":"class SwapiService {\n  constructor() {\n    this._startUrl = 'https://swapi.dev/api/';\n  }\n\n  async fetchToSwapi(url) {\n    const f = await fetch(this._startUrl + url.toString());\n\n    if (!f.ok) {\n      throw new Error(`Not fetch url ${url}. Error status - ${f.status}`);\n    }\n\n    return await f.json();\n  }\n\n  async getAllPeople() {\n    const r = await this.fetchToSwapi('people');\n    return r.results;\n  }\n\n  async getPeople(id) {\n    return await this.fetchToSwapi(`people/${id}`);\n  }\n\n  async getAllPlanets() {\n    const r = await this.fetchToSwapi('planets');\n    return r.results;\n  }\n\n  async getPlanet(id) {\n    return await this.fetchToSwapi(`planets/${id}`);\n  }\n\n  _transformPlanet(planet) {}\n\n}\n\nexport const swapi = new SwapiService();","map":{"version":3,"sources":["/home/user/Рабочий стол/star-db/src/services/swapi/SwapiService.js"],"names":["SwapiService","_startUrl","fetchToSwapi","url","f","fetch","toString","ok","Error","status","json","getAllPeople","r","results","getPeople","id","getAllPlanets","getPlanet","_transformPlanet","planet","swapi"],"mappings":"AAAA,MAAMA,YAAN,CAAmB;AAAA;AAAA,SACfC,SADe,GACH,wBADG;AAAA;;AAGG,QAAZC,YAAY,CAACC,GAAD,EAAM;AACpB,UAAMC,CAAC,GAAG,MAAMC,KAAK,CAAC,KAAKJ,SAAL,GAAiBE,GAAG,CAACG,QAAJ,EAAlB,CAArB;;AACA,QAAI,CAACF,CAAC,CAACG,EAAP,EAAW;AACP,YAAM,IAAIC,KAAJ,CAAW,iBAAgBL,GAAI,oBAAmBC,CAAC,CAACK,MAAO,EAA3D,CAAN;AACH;;AACD,WAAO,MAAML,CAAC,CAACM,IAAF,EAAb;AACH;;AAEiB,QAAZC,YAAY,GAAG;AACjB,UAAMC,CAAC,GAAG,MAAM,KAAKV,YAAL,CAAkB,QAAlB,CAAhB;AACA,WAAOU,CAAC,CAACC,OAAT;AACH;;AAEc,QAATC,SAAS,CAACC,EAAD,EAAK;AAChB,WAAO,MAAM,KAAKb,YAAL,CAAmB,UAASa,EAAG,EAA/B,CAAb;AACH;;AAEkB,QAAbC,aAAa,GAAG;AAClB,UAAMJ,CAAC,GAAG,MAAM,KAAKV,YAAL,CAAkB,SAAlB,CAAhB;AACA,WAAOU,CAAC,CAACC,OAAT;AACH;;AAEc,QAATI,SAAS,CAACF,EAAD,EAAK;AAChB,WAAO,MAAM,KAAKb,YAAL,CAAmB,WAAUa,EAAG,EAAhC,CAAb;AACH;;AAEDG,EAAAA,gBAAgB,CAACC,MAAD,EAAS,CAExB;;AA/Bc;;AAkCnB,OAAO,MAAMC,KAAK,GAAG,IAAIpB,YAAJ,EAAd","sourcesContent":["class SwapiService {\n    _startUrl = 'https://swapi.dev/api/';\n\n    async fetchToSwapi(url) {\n        const f = await fetch(this._startUrl + url.toString())\n        if (!f.ok) {\n            throw new Error(`Not fetch url ${url}. Error status - ${f.status}`)\n        }\n        return await f.json()\n    }\n\n    async getAllPeople() {\n        const r = await this.fetchToSwapi('people')\n        return r.results\n    }\n\n    async getPeople(id) {\n        return await this.fetchToSwapi(`people/${id}`)\n    }\n\n    async getAllPlanets() {\n        const r = await this.fetchToSwapi('planets')\n        return r.results\n    }\n\n    async getPlanet(id) {\n        return await this.fetchToSwapi(`planets/${id}`)\n    }\n\n    _transformPlanet(planet) {\n\n    }\n}\n\nexport const swapi = new SwapiService()\n"]},"metadata":{},"sourceType":"module"}