{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Git repos/sashabull66/sashabull66/sashabull66/starsDB/src/components/ItemDetalis/ItemDetalis.js\";\nimport React, { Component } from 'react';\nimport './ItemDetalis.css';\nimport Spinner from \"../Spinner\";\n/*export const Record = (props) => {\n    const {item, field, label} = props\n    return (\n        <li className=\"list-group-item\">\n            <span className=\"term\">{label}</span>\n            <span>{item[field]}</span>\n        </li>\n    )\n}*/\n\n/*export const Record = (props) => {\n    const { field, label} = props\n    return (\n        <li className=\"list-group-item\">\n            <span className=\"term\">{label}</span>\n            <span>{field}</span>\n        </li>\n    )\n}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ItemDetalis extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      item: null,\n      image: null,\n      isLoading: true\n    };\n\n    this.updateItem = () => {\n      const {\n        itemId,\n        getData,\n        getImageUrl\n      } = this.props;\n      if (!itemId) return;\n      getData(this.props.itemId).then(p => {\n        this.setState({\n          item: p,\n          image: getImageUrl(p),\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateItem(this.props.itemId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.setState({\n        person: null,\n        isLoading: true\n      });\n      this.updateItem();\n    }\n  }\n\n  render() {\n    const {\n      item,\n      isLoading,\n      image\n    } = this.state;\n    const content = isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(PersonView, { ...item,\n      imageUrl: image,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 50\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person-details card\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ItemDetalis;\n\nclass PersonView extends Component {\n  render() {\n    const {\n      name,\n      gender,\n      birthYear,\n      eyeColor,\n      id,\n      imageUrl\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"person-image\",\n        src: imageUrl,\n        alt: \"character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name || 'n/a'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: React.Children.map(this.props.children, child => /*#__PURE__*/React.cloneElement(child, {\n            item: { ...this.props\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/user/Рабочий стол/Git repos/sashabull66/sashabull66/sashabull66/starsDB/src/components/ItemDetalis/ItemDetalis.js"],"names":["React","Component","Spinner","ItemDetalis","state","item","image","isLoading","updateItem","itemId","getData","getImageUrl","props","then","p","setState","componentDidMount","componentDidUpdate","prevProps","person","render","content","children","PersonView","name","gender","birthYear","eyeColor","id","imageUrl","Children","map","child","cloneElement"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './ItemDetalis.css'\nimport Spinner from \"../Spinner\";\n\n\n/*export const Record = (props) => {\n    const {item, field, label} = props\n    return (\n        <li className=\"list-group-item\">\n            <span className=\"term\">{label}</span>\n            <span>{item[field]}</span>\n        </li>\n    )\n}*/\n\n/*export const Record = (props) => {\n    const { field, label} = props\n    return (\n        <li className=\"list-group-item\">\n            <span className=\"term\">{label}</span>\n            <span>{field}</span>\n        </li>\n    )\n}*/\n\nclass ItemDetalis extends Component {\n\n    state = {\n        item: null,\n        image: null,\n        isLoading: true\n    }\n\n    updateItem = () => {\n        const {itemId, getData, getImageUrl} = this.props\n        if (!itemId) return\n        getData(this.props.itemId)\n            .then(p => {\n                this.setState({\n                    item: p,\n                    image: getImageUrl(p),\n                    isLoading: false\n                })\n            })\n    }\n\n    componentDidMount() {\n        this.updateItem(this.props.itemId)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.itemId !== prevProps.itemId) {\n            this.setState({\n                person: null,\n                isLoading: true\n            })\n            this.updateItem()\n        }\n    }\n\n    render() {\n        const {item, isLoading, image} = this.state\n        const content = isLoading ? <Spinner/> : <PersonView {...item} imageUrl={image} children={this.props.children}/>\n        return (\n            <div className=\"person-details card\">\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default ItemDetalis;\n\n\nclass PersonView extends Component {\n    render() {\n        const {name, gender, birthYear, eyeColor, id, imageUrl} = this.props\n\n        return (\n            <>\n                <img className=\"person-image\"\n                     src={imageUrl}\n                     alt=\"character\"/>\n\n                <div className=\"card-body\">\n                    <h4>{name || 'n/a'}</h4>\n                    <ul className=\"list-group list-group-flush\">\n                        {\n                            React.Children.map(this.props.children, child=>React.cloneElement(child, {item : {...this.props}}))\n                        }\n                    </ul>\n                </div>\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}