{"ast":null,"code":"/*\nfetch('https://swapi.dev/api/people/1')\n.then(r=>r.json())\n.then(r=>console.log(r))\n*/\nclass SwapiService {\n  constructor() {\n    this._startUrl = 'https://swapi.dev/api/';\n  }\n\n  async fetchToSwapi(url) {\n    const f = await fetch(this._startUrl + url.toString());\n\n    if (!f.ok) {\n      throw new Error(`Not fetch url ${url}. Error status - ${f.status}`);\n    }\n\n    return await f.json();\n  }\n\n  getAllPeople() {\n    return this.fetchToSwapi('people');\n  }\n\n  getPeople(id) {}\n\n  getAllPlanets() {\n    return this.fetchToSwapi('planet');\n  }\n\n  getPlanet(id) {}\n\n}\n\nconst swapi = new SwapiService();","map":{"version":3,"sources":["/home/user/Рабочий стол/star-db/src/index.js"],"names":["SwapiService","_startUrl","fetchToSwapi","url","f","fetch","toString","ok","Error","status","json","getAllPeople","getPeople","id","getAllPlanets","getPlanet","swapi"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAGA,MAAMA,YAAN,CAAmB;AAAA;AAAA,SACfC,SADe,GACH,wBADG;AAAA;;AAGG,QAAZC,YAAY,CAACC,GAAD,EAAM;AACpB,UAAMC,CAAC,GAAG,MAAMC,KAAK,CAAC,KAAKJ,SAAL,GAAiBE,GAAG,CAACG,QAAJ,EAAlB,CAArB;;AACA,QAAI,CAACF,CAAC,CAACG,EAAP,EAAW;AACP,YAAM,IAAIC,KAAJ,CAAW,iBAAgBL,GAAI,oBAAmBC,CAAC,CAACK,MAAO,EAA3D,CAAN;AACH;;AACD,WAAO,MAAML,CAAC,CAACM,IAAF,EAAb;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKT,YAAL,CAAkB,QAAlB,CAAP;AACH;;AAEDU,EAAAA,SAAS,CAACC,EAAD,EAAK,CACb;;AAEDC,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKZ,YAAL,CAAkB,QAAlB,CAAP;AACH;;AAEDa,EAAAA,SAAS,CAACF,EAAD,EAAK,CACb;;AAvBc;;AA0BnB,MAAMG,KAAK,GAAG,IAAIhB,YAAJ,EAAd","sourcesContent":["/*\nfetch('https://swapi.dev/api/people/1')\n.then(r=>r.json())\n.then(r=>console.log(r))\n*/\n\n\nclass SwapiService {\n    _startUrl = 'https://swapi.dev/api/';\n\n    async fetchToSwapi(url) {\n        const f = await fetch(this._startUrl + url.toString())\n        if (!f.ok) {\n            throw new Error(`Not fetch url ${url}. Error status - ${f.status}`)\n        }\n        return await f.json()\n    }\n\n    getAllPeople() {\n        return this.fetchToSwapi('people')\n    }\n\n    getPeople(id) {\n    }\n\n    getAllPlanets() {\n        return this.fetchToSwapi('planet')\n    }\n\n    getPlanet(id) {\n    }\n}\n\nconst swapi = new SwapiService()\n"]},"metadata":{},"sourceType":"module"}