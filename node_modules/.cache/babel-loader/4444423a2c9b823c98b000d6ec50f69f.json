{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n    this._imageBase = 'https://starwars-visualguide.com/assets/img';\n\n    this.getResource = async url => {\n      const res = await fetch(`${this._apiBase}${url}`);\n\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}` + `, received ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllPeople = async () => {\n      const res = await this.getResource(`/people/`);\n      return res.results.map(this._transformPerson).slice(0, 5);\n    };\n\n    this.getPerson = async id => {\n      const person = await this.getResource(`/people/${id}/`);\n      return this._transformPerson(person);\n    };\n\n    this.getAllPlanets = async () => {\n      const res = await this.getResource(`/planets/`);\n      return res.results.map(this._transformPlanet).slice(0, 5);\n    };\n\n    this.getPlanet = async id => {\n      const planet = await this.getResource(`/planets/${id}/`);\n      return this._transformPlanet(planet);\n    };\n\n    this.getAllStarships = async () => {\n      const res = await this.getResource(`/starships/`);\n      return res.results.map(this._transformStarship).slice(0, 5);\n    };\n\n    this.getStarship = async id => {\n      const starship = await this.getResource(`/starships/${id}/`);\n      return this._transformStarship(starship);\n    };\n\n    this.getPersonImage = ({\n      id\n    }) => {\n      return `${this._imageBase}/characters/${id}.jpg`;\n    };\n\n    this.getStarshipImage = ({\n      id\n    }) => {\n      return `${this._imageBase}/starships/${id}.jpg`;\n    };\n\n    this.getPlanetImage = ({\n      id\n    }) => {\n      return `${this._imageBase}/planets/${id}.jpg`;\n    };\n\n    this._extractId = item => {\n      const idRegExp = /\\/([0-9]*)\\/$/;\n      return item.url.match(idRegExp)[1];\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.cost_in_credits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargo_capacity\n      };\n    };\n\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birth_year,\n        eyeColor: person.eye_color\n      };\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/user/Рабочий стол/Git repos/sashabull66/sashabull66/sashabull66/starsDB/src/services/swapi/SwapiService.js"],"names":["SwapiService","_apiBase","_imageBase","getResource","url","res","fetch","ok","Error","status","json","getAllPeople","results","map","_transformPerson","slice","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","getPersonImage","getStarshipImage","getPlanetImage","_extractId","item","idRegExp","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","gender","birthYear","birth_year","eyeColor","eye_color"],"mappings":"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","sourcesContent":["export default class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n    _imageBase = 'https://starwars-visualguide.com/assets/img';\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    };\n\n    getAllPeople = async () => {\n        const res = await this.getResource(`/people/`);\n        return res.results\n            .map(this._transformPerson)\n            .slice(0, 5);\n    };\n\n    getPerson = async (id) => {\n        const person = await this.getResource(`/people/${id}/`);\n        return this._transformPerson(person);\n    };\n\n    getAllPlanets = async () => {\n        const res = await this.getResource(`/planets/`);\n        return res.results\n            .map(this._transformPlanet)\n            .slice(0, 5);\n    };\n\n    getPlanet = async (id) => {\n        const planet = await this.getResource(`/planets/${id}/`);\n        return this._transformPlanet(planet);\n    };\n\n    getAllStarships = async () => {\n        const res = await this.getResource(`/starships/`);\n        return res.results\n            .map(this._transformStarship)\n            .slice(0, 5);\n    };\n\n    getStarship = async (id) => {\n        const starship = await this.getResource(`/starships/${id}/`);\n        return this._transformStarship(starship);\n    };\n\n    getPersonImage = ({id}) => {\n        return `${this._imageBase}/characters/${id}.jpg`\n    };\n\n    getStarshipImage = ({id}) => {\n        return `${this._imageBase}/starships/${id}.jpg`\n    };\n\n    getPlanetImage = ({id}) => {\n        return `${this._imageBase}/planets/${id}.jpg`\n    };\n\n    _extractId = (item) => {\n        const idRegExp = /\\/([0-9]*)\\/$/;\n        return item.url.match(idRegExp)[1];\n    };\n\n    _transformPlanet = (planet) => {\n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        };\n    };\n\n    _transformStarship = (starship) => {\n        return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.cost_in_credits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargo_capacity\n        }\n    };\n\n    _transformPerson = (person) => {\n        return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birth_year,\n            eyeColor: person.eye_color\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}