{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Git repos/sashabull66/sashabull66/sashabull66/starsDB/src/components/HOC/WithData/WithData.js\";\nimport React, { Component } from \"react\";\nimport Spinner from \"../../Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithData = ViewComponent => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        data: null,\n        // info for feature render\n        loading: false,\n        error: false\n      };\n\n      this.update = () => {\n        this.setState({\n          loading: true,\n          error: false\n        });\n        this.props.getData().then(data => {\n          this.setState({\n            loading: false,\n            data\n          });\n        }).catch(() => {\n          this.setState({\n            loading: false,\n            error: true\n          });\n        });\n      };\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.getData !== prevProps.getData) {\n        this.update();\n      }\n    }\n\n    componentDidMount() {\n      this.update();\n    }\n\n    render() {\n      const {\n        data,\n        error,\n        loading\n      } = this.state;\n      if (loading) return !this.state.data ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(ViewComponent, { ...this.state,\n        ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 52\n      }, this);\n    }\n\n  }, _temp;\n};\n\n_c = WithData;\nexport default WithData;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithData\");","map":{"version":3,"sources":["/home/user/Рабочий стол/Git repos/sashabull66/sashabull66/sashabull66/starsDB/src/components/HOC/WithData/WithData.js"],"names":["React","Component","Spinner","WithData","ViewComponent","state","data","loading","error","update","setState","props","getData","then","catch","componentDidUpdate","prevProps","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAChC,iBAAO,cAAcH,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC3BI,KAD2B,GACnB;AACJC,QAAAA,IAAI,EAAE,IADF;AACQ;AACZC,QAAAA,OAAO,EAAE,KAFL;AAGJC,QAAAA,KAAK,EAAE;AAHH,OADmB;;AAAA,WAiB3BC,MAjB2B,GAiBlB,MAAM;AACX,aAAKC,QAAL,CAAc;AACVH,UAAAA,OAAO,EAAE,IADC;AAEVC,UAAAA,KAAK,EAAE;AAFG,SAAd;AAIA,aAAKG,KAAL,CAAWC,OAAX,GACKC,IADL,CACUP,IAAI,IAAI;AACV,eAAKI,QAAL,CAAc;AACVH,YAAAA,OAAO,EAAE,KADC;AAEVD,YAAAA;AAFU,WAAd;AAKH,SAPL,EAQKQ,KARL,CAQW,MAAI;AACP,eAAKJ,QAAL,CAAc;AACVH,YAAAA,OAAO,EAAE,KADC;AAEVC,YAAAA,KAAK,EAAE;AAFG,WAAd;AAIH,SAbL;AAeH,OArC0B;AAAA;;AAO3BO,IAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,UAAI,KAAKL,KAAL,CAAWC,OAAX,KAAuBI,SAAS,CAACJ,OAArC,EAA8C;AAC1C,aAAKH,MAAL;AACH;AACJ;;AAEDQ,IAAAA,iBAAiB,GAAG;AAChB,WAAKR,MAAL;AACH;;AAwBDS,IAAAA,MAAM,GAAG;AACL,YAAM;AAACZ,QAAAA,IAAD;AAAOE,QAAAA,KAAP;AAAcD,QAAAA;AAAd,UAAyB,KAAKF,KAApC;AACA,UAAIE,OAAJ,EACA,OAAO,CAAC,KAAKF,KAAL,CAAWC,IAAZ,gBAAmB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAnB,gBAAgC,QAAC,aAAD,OAAmB,KAAKD,KAAxB;AAAA,WAAmC,KAAKM;AAAxC;AAAA;AAAA;AAAA;AAAA,cAAvC;AACH;;AA3C0B,GAA/B;AA6CH,CA9CD;;KAAMR,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Spinner from \"../../Spinner\";\n\nconst WithData = (ViewComponent) => {\n    return class extends Component {\n        state = {\n            data: null, // info for feature render\n            loading: false,\n            error: false\n        }\n\n        componentDidUpdate(prevProps) {\n            if (this.props.getData !== prevProps.getData) {\n                this.update()\n            }\n        }\n\n        componentDidMount() {\n            this.update()\n        }\n\n        update = () => {\n            this.setState({\n                loading: true,\n                error: false\n            })\n            this.props.getData()\n                .then(data => {\n                    this.setState({\n                        loading: false,\n                        data,\n                    })\n\n                })\n                .catch(()=>{\n                    this.setState({\n                        loading: false,\n                        error: true\n                    })\n                })\n\n        }\n\n        render() {\n            const {data, error, loading} = this.state\n            if (loading) \n            return !this.state.data ? <Spinner/> : <ViewComponent {...this.state} {...this.props}/>\n        }\n    }\n}\n\nexport default WithData"]},"metadata":{},"sourceType":"module"}