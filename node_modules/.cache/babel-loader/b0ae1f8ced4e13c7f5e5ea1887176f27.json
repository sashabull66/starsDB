{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Git repos/sashabull66/sashabull66/sashabull66/starsDB/src/components/RandomPlanet/RandomPlanet.js\";\nimport React, { Component } from 'react';\nimport './RandomPlanet.css';\nimport { swapi } from \"../../services/swapi/SwapiService\";\nimport Spinner from \"../Spinner\";\nimport ErrorComponent from \"../ErrorComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RandomPlanet extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      planet: {},\n      isLoading: true,\n      isError: false\n    };\n\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet,\n        isLoading: false\n      });\n    };\n\n    this.onError = error => {\n      console.error(error);\n      this.setState({\n        isLoading: false,\n        isError: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n  }\n\n  updatePlanet() {\n    const id = Math.floor(Math.random() * 25 + 2);\n    swapi.getPlanet(id).then(planet => {\n      this.onPlanetLoaded(planet);\n    }).catch(this.onError);\n  }\n\n  render() {\n    const {\n      isLoading,\n      planet,\n      isError\n    } = this.state;\n\n    const preloader = isLoading && !isError && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 52\n    }, this);\n\n    const content = !isLoading && !isError && /*#__PURE__*/_jsxDEV(PlanetView, { ...planet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 51\n    }, this);\n\n    const error = isError && /*#__PURE__*/_jsxDEV(ErrorComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 34\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-planet jumbotron rounded\",\n      children: [preloader, content, error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RandomPlanet;","map":{"version":3,"sources":["/home/user/Рабочий стол/Git repos/sashabull66/sashabull66/sashabull66/starsDB/src/components/RandomPlanet/RandomPlanet.js"],"names":["React","Component","swapi","Spinner","ErrorComponent","RandomPlanet","state","planet","isLoading","isError","onPlanetLoaded","setState","onError","error","console","componentDidMount","updatePlanet","id","Math","floor","random","getPlanet","then","catch","render","preloader","content"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,oBAAP;AACA,SAAQC,KAAR,QAAoB,mCAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAKjCK,KALiC,GAKzB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,OAAO,EAAE;AAHL,KALyB;;AAAA,SAWjCC,cAXiC,GAWfH,MAAD,IAAY;AACzB,WAAKI,QAAL,CAAc;AAACJ,QAAAA,MAAD;AAASC,QAAAA,SAAS,EAAE;AAApB,OAAd;AACH,KAbgC;;AAAA,SAejCI,OAfiC,GAetBC,KAAD,IAAW;AACjBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAKF,QAAL,CAAc;AACVH,QAAAA,SAAS,EAAE,KADD;AAEVC,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KArBgC;AAAA;;AACjCM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,YAAL;AACH;;AAoBDA,EAAAA,YAAY,GAAG;AACX,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAAhB,GAAqB,CAAhC,CAAX;AACAlB,IAAAA,KAAK,CAACmB,SAAN,CAAgBJ,EAAhB,EACKK,IADL,CACWf,MAAD,IAAY;AACd,WAAKG,cAAL,CAAoBH,MAApB;AACH,KAHL,EAIKgB,KAJL,CAIW,KAAKX,OAJhB;AAKH;;AAEDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAChB,MAAAA,SAAD;AAAYD,MAAAA,MAAZ;AAAoBE,MAAAA;AAApB,QAA+B,KAAKH,KAA1C;;AACA,UAAMmB,SAAS,GAAGjB,SAAS,IAAI,CAACC,OAAd,iBAAyB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAA3C;;AACA,UAAMiB,OAAO,GAAG,CAAClB,SAAD,IAAc,CAACC,OAAf,iBAA0B,QAAC,UAAD,OAAgBF;AAAhB;AAAA;AAAA;AAAA;AAAA,YAA1C;;AACA,UAAMM,KAAK,GAAGJ,OAAO,iBAAI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAzB;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,iBACKgB,SADL,EAEKC,OAFL,EAGKb,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA5CgC;;AA+CrC,eAAeR,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport './RandomPlanet.css'\nimport {swapi} from \"../../services/swapi/SwapiService\";\nimport Spinner from \"../Spinner\";\nimport ErrorComponent from \"../ErrorComponent\";\n\nclass RandomPlanet extends Component {\n    componentDidMount() {\n        this.updatePlanet()\n    }\n\n    state = {\n        planet: {},\n        isLoading: true,\n        isError: false\n    }\n\n    onPlanetLoaded = (planet) => {\n        this.setState({planet, isLoading: false})\n    }\n\n    onError = (error) => {\n        console.error(error)\n        this.setState({\n            isLoading: false,\n            isError: true\n        })\n    }\n\n    updatePlanet() {\n        const id = Math.floor(Math.random() * 25 + 2)\n        swapi.getPlanet(id)\n            .then((planet) => {\n                this.onPlanetLoaded(planet)\n            })\n            .catch(this.onError)\n    }\n\n    render() {\n        const {isLoading, planet, isError} = this.state\n        const preloader = isLoading && !isError && <Spinner/>\n        const content = !isLoading && !isError && <PlanetView {...planet}/>\n        const error = isError && <ErrorComponent/>\n        return (\n            <div className='random-planet jumbotron rounded'>\n                {preloader}\n                {content}\n                {error}\n            </div>\n        )\n    }\n}\n\nexport default RandomPlanet;\n\n"]},"metadata":{},"sourceType":"module"}