{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Git repos/sashabull66/sashabull66/sashabull66/starsDB/src/components/PersonDetalis/PersonDetalis.js\";\nimport React, { Component } from 'react';\nimport './PersonDetalis.css';\nimport { swapi } from \"../../services/swapi/SwapiService\";\nimport Spinner from \"../Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PersonDetalis extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      person: null,\n      isLoading: true\n    };\n\n    this.updatePerson = () => {\n      if (!this.props.personId) return;\n      swapi.getPeople(this.props.personId).then(p => {\n        this.setState({\n          person: p,\n          isLoading: false\n        }, () => {\n          console.log(this.state);\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updatePerson(this.props.personId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.personId !== prevProps.personId) {\n      this.updatePerson;\n    }\n  }\n\n  render() {\n    const {\n      person,\n      isLoading\n    } = this.state;\n    const content = isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(PersonView, { ...person\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 50\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person-details card\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PersonDetalis;\n\nclass PersonView extends Component {\n  render() {\n    const {\n      name,\n      gender,\n      birthYear,\n      eyeColor,\n      id\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"person-image\",\n        src: `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`,\n        alt: \"character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name || 'n/a'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"term\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: gender || 'n/a'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"term\",\n              children: \"Birth Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: birthYear || 'n/a'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"term\",\n              children: \"Eye Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: eyeColor || 'n/a'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/user/Рабочий стол/Git repos/sashabull66/sashabull66/sashabull66/starsDB/src/components/PersonDetalis/PersonDetalis.js"],"names":["React","Component","swapi","Spinner","PersonDetalis","state","person","isLoading","updatePerson","props","personId","getPeople","then","p","setState","console","log","componentDidMount","componentDidUpdate","prevProps","render","content","PersonView","name","gender","birthYear","eyeColor","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './PersonDetalis.css'\nimport {swapi} from \"../../services/swapi/SwapiService\";\nimport Spinner from \"../Spinner\";\n\nclass PersonDetalis extends Component {\n\n    state = {\n        person: null,\n        isLoading: true\n    }\n\n    updatePerson = () => {\n        if (!this.props.personId) return\n        swapi.getPeople(this.props.personId)\n            .then(p=>{\n                this.setState({\n                    person: p,\n                    isLoading: false\n                }, ()=>{\n                    console.log(this.state)\n                })\n            })\n    }\n\n    componentDidMount() {\n        this.updatePerson(this.props.personId)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.personId !== prevProps.personId) {\n            this.updatePerson\n        }\n    }\n\n    render() {\n        const {person, isLoading} = this.state\n        const content = isLoading ? <Spinner/> : <PersonView {...person}/>\n        return (\n            <div className=\"person-details card\">\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default PersonDetalis;\n\n\nclass PersonView extends Component {\n    render() {\n        const {name, gender, birthYear, eyeColor, id} = this.props\n        return (\n            <>\n                <img className=\"person-image\"\n                     src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}\n                     alt=\"character\"/>\n\n                <div className=\"card-body\">\n                    <h4>{name || 'n/a'}</h4>\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">\n                            <span className=\"term\">Gender</span>\n                            <span>{gender || 'n/a'}</span>\n                        </li>\n                        <li className=\"list-group-item\">\n                            <span className=\"term\">Birth Year</span>\n                            <span>{birthYear || 'n/a'}</span>\n                        </li>\n                        <li className=\"list-group-item\">\n                            <span className=\"term\">Eye Color</span>\n                            <span>{eyeColor || 'n/a'}</span>\n                        </li>\n                    </ul>\n                </div>\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}